{"version":3,"sources":["services/persons.js","index.js"],"names":["baseURL","axios","get","then","response","data","newPerson","post","id","delete","Notification","message","className","Filter","handleFilter","onChange","PersonForm","newName","newPhone","setNewName","handleNameChange","setNewPhone","handlePhoneChange","addName","onSubmit","value","type","Persons","result","handleDelete","map","person","key","name","number","onClick","App","useState","persons","setPersons","filter","setNewFilter","successMessage","setSuccessMessage","toLowerCase","includes","toLocaleLowerCase","useEffect","PersonService","event","target","preventDefault","successMsg","some","e","alert","isNaN","concat","setTimeout","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fa201f4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = 'https://stark-cliffs-82679.herokuapp.com/api/persons'\n\nconst getAll = ()=> {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\nconst create = (newPerson) => {\n    const request = axios.post(baseURL,newPerson)\n    return request.then(response => response.data)\n}\nconst del = (id) => {\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)\n}\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject)\n    return request.then(response => response.data)\n}\nexport default {getAll,create, del,update} \n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport PersonService from './services/persons.js'\nimport './index.css'\nconst Notification = ({message}) => {\n  if (message === '') {\n      return null \n  }\n  return (\n    <div className=\"success\"> \n    {message}\n    </div>\n  )\n}\nconst Filter = ({ handleFilter }) => {\n  return (\n    <div>\n      Filter shown with : <input onChange={handleFilter} />\n    </div>\n  )\n}\nconst PersonForm = ({ newName, setNewName, newPhone, setNewPhone, handleNameChange, handlePhoneChange, addName }) => {\n  return (<>\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>number: <input value={newPhone} onChange={handlePhoneChange} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>)\n\n}\nconst Persons = ({ result, handleDelete }) => {\n\n  return (\n    <>\n      <ul>\n        {result.map(person => <li key={person.name} > {person.name + ' ' + person.number} <button name= {person.name} value={person.id} onClick={handleDelete}> Delete </button> </li>)}\n      </ul>\n      <br />\n    </>\n  )\n}\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('');\n  const [filter, setNewFilter] = useState('');\n  const [successMessage, setSuccessMessage] = useState ('')\n  const addName = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newPhone\n    }\n  const successMsg = `${newPerson.name} has successfuly been added to the phonebook ! `\n  \n  //Checking if the phone number doesnt' belong to someone already \n  if (persons.some(e => e.number === newPerson.number && e.number !== '')) {\n\n      alert(`${newPerson.number} already belongs to someone`)\n      setNewPhone('');\n    }\n    else {\n    if (newPerson.number===\"\" || isNaN(newPerson.number)) {\n      alert('Please input a valid number')\n      setNewPhone('');\n      return\n    }\n    //Checking if the person's name isn't already in the phonebook\n    if (persons.some(e => e.name === newPerson.name)) {\n      alert(`${newPerson.name} is already added to the phonebook`);\n    }\n      else {\n      \n\n       PersonService\n       .create(newPerson)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setSuccessMessage(successMsg)\n          setTimeout(() => {\n            setSuccessMessage('')\n          }, 5000)\n          setNewPhone('')\n          setNewName('')\n        })\n  \n        setNewName('');\n        setNewPhone('');\n      }\n    }\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n\n  }\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value);\n  }\n  const handleDelete = (event) => {\n    if (window.confirm(`Do you really want to delete ${event.target.name} from the phonebook ?`))\n  {\n    PersonService\n    .del(event.target.value)\n    .then(() => {\n      PersonService.getAll()\n      .then(response => {\n        setPersons(response)\n      })})\n    }\n  \n  }\n  const result = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter.toLocaleLowerCase()));\n  useEffect(() => {\n    PersonService\n    .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} />\n      <Filter handleFilter={handleFilter} />\n      <h2>add a new </h2>\n\n      <PersonForm handleNameChange={handleNameChange}\n        handlePhoneChange={handlePhoneChange}\n        addName={addName}\n        newName={newName}\n        newPhone={newPhone}\n        setNewName={setNewName}\n        setNewPhone={setNewPhone} />\n\n      <h2>Numbers</h2>\n      <Persons result={result} handleDelete={handleDelete}/>\n\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}